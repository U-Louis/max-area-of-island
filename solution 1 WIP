/**
 * @param {number[][]} grid
 * @return {number}
 */
var maxAreaOfIsland = function(grid) {
    
    let isles = new Array(grid.length * grid[0].length).fill(0);
    var idx= 0;
    
    //seen = 2
    
    function check(x,y){
        
        isles[idx] +=1;
        grid[x][y] = 2;
        
        //rigth
        if(grid[x+1]){
            if(grid[x+1][y] == 1){
                check(x+1,y);
            }
            grid[x+1][y] =2;
        }

        //left
        if(grid[x-1]){
            if(grid[x-1][y] == 1){
                check(x-1,y);
            }
            grid[x-1][y] =2;
        }
        
        //bottom
        if(grid[x][y+1]){
            if(grid[x][y+1] == 1){
                check(x,y+1);
            }
            grid[x][y+1] =2;
        }
        
        //top
        if(grid[x-1]){
            if(grid[x-1][y] == 1){
                check(x-1,y);
            }
            grid[x-1][y] =2;
        }

    }
            
    
    //iterate every case in the matrix
    for(i=0;i<grid.length;i++){
        for(j=0;j<grid[i].length; j++){        
            if(grid[i][j] == 1){
                check(i,j);
                idx++;
            }   
        }
    }
    return Math.max(...isles);
};


/*
569 / 728 test cases passed.
Status: Wrong Answer

Input:
[[0,1],[1,1]]
Output:
2
Expected:
3

*/
